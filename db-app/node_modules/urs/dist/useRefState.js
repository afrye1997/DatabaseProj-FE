"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
/**
 * Determines if the given param is an object. {}
 * @param obj
 */
exports.isObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]'; // eslint-disable-line
const useMounted = () => {
    const mounted = react_1.useRef(false);
    react_1.useEffect(() => {
        mounted.current = true;
        return () => {
            mounted.current = false;
        };
    }, []);
    return mounted;
};
function useRefState(initialState, blockIfUnmounted = true) {
    const mounted = useMounted();
    const [reactState, setReactState] = react_1.useState(initialState);
    const state = react_1.useRef(reactState);
    const setState = react_1.useCallback(arg => {
        if (!mounted.current && blockIfUnmounted)
            return;
        state.current = (typeof arg === 'function') ? arg(state.current) : arg;
        setReactState(state.current);
    }, []);
    return [state, setState];
}
exports.useRefState = useRefState;
exports.default = useRefState;
